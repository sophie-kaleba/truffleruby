# -*- mode: yaml -*-
# Config file for ReBench
default_experiment: benchmarks
default_data_file: 'splitting-benchmark.data'

reporting:
    # Benchmark results will be reported to ReBenchDB
    rebenchdb:
        # this url needs to point to the API endpoint
        db_url: http://www.topistuff.ovh/rebenchdb
        repo_url: https://github.com/sophie-kaleba/truffleruby
        record_all: true # make sure everything is recorded
        project_name: TruffleRuby


# definition of benchmark suites
benchmark_suites:  
    rails-app:
        gauge_adapter: RebenchLog
        location: .
        command: &HARNESS_CMD "./phd-bench/phase/harness.rb %(benchmark)s %(iterations)s 0 %(variable)s ; ./post-process.sh %(benchmark)s %(suite)s %(executor)s "
        iterations: 10
        benchmarks: 
            - BlogRailsRoutes: {variable_values: [1], machines: [yuria ]}
            # - BlogRailsRoutesOneRouteOneRequest: {variable_values: [   1, machines: [yuria2 ]}
            # - BlogRailsRoutesTwoRoutes: {variable_values: [   1, machines: [yuria3 ]}
            - BlogRailsRoutesTwoRoutesTwoRequests: {variable_values: [1], machines: [yuria2 ]}
            - ERubiRails: {variable_values: [1], iterations: 10, machines: [yuria3 ]}

    yjit-benchs-startup:
        gauge_adapter: RebenchLog
        location: .
        command: *HARNESS_CMD
        max_invocation_time: 6000
        iterations: 1
        benchmarks: 
            - BinaryTrees: {variable_values: [1], iterations: 1, machines: [yuria ]}
            - FannkuchRedux: {variable_values: [1], iterations: 1, machines: [yuria2 ]}
            - HexaPdfSmall: {variable_values: [1], iterations: 1, machines: [yuria3 ]}
            # - ActiveRecordBench: {variable_values: [   1], iterations: 1, machines: [yuria ]}
            - MailBench: {variable_values: [1], machines: [yuria ]} 
            - PsychLoad: {variable_values: [1], machines: [yuria2 ]} 
            - RubykonBench: {variable_values: [1], machines: [yuria3 ]} 
            #- JekyllBench: {variable_values: [ 1], machines: [yuria ]} 

    ruby-benchs-startup:
        gauge_adapter: RebenchLog
        location: .
        command: *HARNESS_CMD
        iterations: 1
        benchmarks: 
            - Acid: {variable_values: [ 10], machines: [yuria ]}       
            - AsciidoctorConvertSmall: {variable_values: [ 1], machines: [yuria2 ]}  
            - AsciidoctorLoadFileSmall: {variable_values: [ 1], machines: [yuria3 ]}
            - BinaryTrees: {variable_values: [ 1], machines: [yuria ]} 
            - ImageDemoConv: {variable_values: [ 1], machines: [yuria2 ]}  
            - ImageDemoSobel: {variable_values: [ 1], machines: [yuria3 ]}  
            - LiquidCartParse: {variable_values: [ 5], machines: [yuria ]}          
            - LiquidCartRender: {variable_values: [ 10], machines: [yuria2 ]}         
            - LiquidMiddleware: {variable_values: [ 100], machines: [yuria3 ]} 
            - MatrixMultiply: {variable_values: [ 10], machines: [yuria ]}       
            - OptCarrot: {variable_values: [ 5], machines: [yuria2 ]}
            - Pidigits: {variable_values: [ 5], machines: [yuria3 ]}
            - RedBlack: {variable_values: [ 5], machines: [yuria ]}
            - SinatraHello: {variable_values: [ 5], machines: [yuria2 ]}

    game-benchs-startup:
        gauge_adapter: RebenchLog
        location: .
        command: *HARNESS_CMD
        iterations: 1
        benchmarks: 
#            - Havlak: {variable_values: [ 100], machines: [yuria], variable_values: [ ["--vm.Xss6m"]}
            - Bounce: {variable_values: [ 10], machines: [yuria ]}
            - CD: {variable_values: [ 100], machines: [yuria2 ]}
            - DeltaBlue: {variable_values: [ 20], machines: [yuria3 ]}
            - Json: {variable_values: [ 30], machines: [yuria ]}
            - LeeBench: {variable_values: [ 100], machines: [yuria2 ]}
            - List: {variable_values: [ 500], machines: [yuria3 ]}
            - Mandelbrot: {variable_values: [ 500], machines: [yuria ]}
            - NBody: {variable_values: [ 250000], machines: [yuria2 ]}
            - NeuralNet: {variable_values: [ 10], machines: [yuria3 ]}
            - Permute: {variable_values: [ 500], machines: [yuria ]}
            - Queens: {variable_values: [ 300], machines: [yuria2 ]}
            - Richards: {variable_values: [ 15], machines: [yuria3 ]}
            - Sieve: {variable_values: [ 100], machines: [yuria ]}
            - SpectralNorm: {variable_values: [ 1], machines: [yuria2 ]}
            - Storage: {variable_values: [ 300], machines: [yuria3 ]}
            - Towers: {variable_values: [ 200], machines: [yuria ]}

    yjit-benchs-interp:
        gauge_adapter: RebenchLog
        location: .
        command: *HARNESS_CMD
        max_invocation_time: 6000
        iterations: 1
        benchmarks: 
            - BinaryTrees: {variable_values: [   1], iterations: 1, machines: [yuria ]}
            - FannkuchRedux: {variable_values: [   1], iterations: 1, machines: [yuria2 ]}
            - HexaPdfSmall: {variable_values: [   1], iterations: 1, machines: [yuria3 ]}
            # # - ActiveRecordBench: {variable_values: [   1], iterations: 1, machines: [yuria ]}
            # - MailBench: {variable_values: [ 1], machines: [yuria ]} 
            # - PsychLoad: {variable_values: [ 1], machines: [yuria2 ]} 
            # - RubykonBench: {variable_values: [ 1], machines: [yuria3 ]} 
            # #- JekyllBench: {variable_values: [ 1], machines: [yuria ]} 

    ruby-benchs-interp:
        gauge_adapter: RebenchLog
        location: .
        command: *HARNESS_CMD
        iterations: 1
        benchmarks: 
            - Acid: {variable_values: [ 400], machines: [yuria ]}       
            - AsciidoctorConvertSmall: {variable_values: [ 1], machines: [yuria2 ]}  
            - AsciidoctorLoadFileSmall: {variable_values: [ 1], machines: [yuria3 ]}
            # - BinaryTrees: {variable_values: [ 1], machines: [yuria ]} 
            # - ImageDemoConv: {variable_values: [ 1], machines: [yuria2 ]}  
            # - ImageDemoSobel: {variable_values: [ 1], machines: [yuria3 ]}  
            # - LiquidCartParse: {variable_values: [ 5], machines: [yuria ]}          
            # - LiquidCartRender: {variable_values: [ 20], machines: [yuria2 ]}         
            # - LiquidMiddleware: {variable_values: [ 100], machines: [yuria3 ]} 
            # - MatrixMultiply: {variable_values: [ 5], machines: [yuria3 ]}       
            # - OptCarrot: {variable_values: [ 5], machines: [yuria2 ]}
            # - Pidigits: {variable_values: [ 5], machines: [yuria3 ]}
            # - RedBlack: {variable_values: [ 2], machines: [yuria3 ]}
            # - SinatraHello: {variable_values: [ 20], machines: [yuria2 ]}

    game-benchs-interp:
        gauge_adapter: RebenchLog
        location: .
        command: *HARNESS_CMD
        iterations: 1
        benchmarks: 
#            - Havlak: {variable_values: [ 100], machines: [yuria], variable_values: [ ["--vm.Xss6m"]}
            - Bounce: {variable_values: [ 10], machines: [yuria ]}
            - CD: {variable_values: [ 100], machines: [yuria2 ]}
            - DeltaBlue: {variable_values: [ 40], machines: [yuria3 ]}
            # - Json: {variable_values: [ 30], machines: [yuria ]}
            # - LeeBench: {variable_values: [ 100], machines: [yuria2 ]}
            # - List: {variable_values: [ 500], machines: [yuria3 ]}
            # - Mandelbrot: {variable_values: [ 500], machines: [yuria ]}
            # - NBody: {variable_values: [ 250000], machines: [yuria2 ]}
            # - NeuralNet: {variable_values: [ 10], machines: [yuria3 ]}
            # - Permute: {variable_values: [ 500], machines: [yuria ]}
            # - Queens: {variable_values: [ 300], machines: [yuria2 ]}
            # - Richards: {variable_values: [ 15], machines: [yuria3 ]}
            # - Sieve: {variable_values: [ 100], machines: [yuria ]}
            # - SpectralNorm: {variable_values: [ 1], machines: [yuria2 ]}
            # - Storage: {variable_values: [ 300], machines: [yuria3 ]}
            # - Towers: {variable_values: [ 200], machines: [yuria ]}

    yjit-benchs-steady:
        gauge_adapter: RebenchLog
        location: .
        command: *HARNESS_CMD
        max_invocation_time: 5000
        iterations: 1
        benchmarks: 
            - BinaryTrees: {variable_values: [   1], iterations: 1, machines: [yuria ]}
            - FannkuchRedux: {variable_values: [   1], iterations: 1, machines: [yuria2 ]}
            - HexaPdfSmall: {variable_values: [   1], iterations: 1, machines: [yuria3 ]}
            ## - ActiveRecordBench: {variable_values: [   1], iterations: 1, machines: [yuria ]}
            # - MailBench: {variable_values: [ 1], machines: [yuria ]} 
            # - PsychLoad: {variable_values: [ 1], machines: [yuria2 ]} 
            # - RubykonBench: {variable_values: [ 1], machines: [yuria3 ]} 
            ##- JekyllBench: {variable_values: [ 1], machines: [yuria ]} 

    ruby-benchs-steady:
        gauge_adapter: RebenchLog
        location: .
        command: *HARNESS_CMD
        iterations: 150
        benchmarks: 
            - Acid: {variable_values: [ 5000], iterations: 800, machines: [yuria ]}       
            - AsciidoctorConvertSmall: {variable_values: [ 1], machines: [yuria2 ]}  
            - AsciidoctorLoadFileSmall: {variable_values: [ 1], machines: [yuria3 ]}
            # - BinaryTrees: {variable_values: [ 1], machines: [yuria ]} 
            # - ImageDemoConv: {variable_values: [ 30], machines: [yuria2 ]}  
            # - ImageDemoSobel: {variable_values: [ 30], machines: [yuria3 ]}  
            # - LiquidCartParse: {variable_values: [ 100], machines: [yuria ]}          
            # - LiquidCartRender: {variable_values: [ 300], machines: [yuria2 ]}         
            # - LiquidMiddleware: {variable_values: [ 4000], machines: [yuria3 ]} 
            # - MatrixMultiply: {variable_values: [ 200], machines: [yuria ]}       
            # - OptCarrot: {variable_values: [ 5], machines: [yuria2 ]}
            # - Pidigits: {variable_values: [ 2], machines: [yuria3 ]}
            # - RedBlack: {variable_values: [ 5], machines: [yuria ]}
            # - SinatraHello: {variable_values: [ 2000], machines: [yuria2 ]}


    game-benchs-steady:
        gauge_adapter: RebenchLog
        location: .
        command: *HARNESS_CMD
        iterations: 300
        benchmarks: 
#            - Havlak: {variable_values: [ 100], machines: [yuria], variable_values: [ ["--vm.Xss6m"]}
            - Bounce: {variable_values: [ 2000], machines: [yuria ]}
            - CD: {variable_values: [ 100], machines: [yuria2 ]}
            # - DeltaBlue: {variable_values: [ 9000], machines: [yuria3 ]}
            # - Json: {variable_values: [ 100], machines: [yuria ]}
            # - LeeBench: {variable_values: [ 200], machines: [yuria2 ]}
            # - List: {variable_values: [ 500], machines: [yuria3 ]}
            # - Mandelbrot: {variable_values: [ 500], machines: [yuria ]}
            # - NBody: {variable_values: [ 250000], machines: [yuria2 ]}
            # - NeuralNet: {variable_values: [ 10], iterations: 150, machines: [yuria3 ]}
            # - Permute: {variable_values: [ 500], machines: [yuria ]}
            # - Queens: {variable_values: [ 300], machines: [yuria2 ]}
            # - Richards: {variable_values: [ 15], machines: [yuria3 ]}
            # - Sieve: {variable_values: [ 5000], machines: [yuria ]}
            # - SpectralNorm: {variable_values: [ 1], machines: [yuria2 ]}
            # - Storage: {variable_values: [ 300], machines: [yuria3 ]}
            # - Towers: {variable_values: [ 200], machines: [yuria ]}

executors:
    TruffleRuby-ce:
        path: /tmp/truffleruby/truffleruby-jvm-ce/bin
        executable: truffleruby
        args: "--vm.Dpolyglot.engine.TraceSplittingSummary=true --vm.Dpolyglot.log.file='tmplog'"

    TruffleRuby-ce-native:
        path: /tmp/truffleruby/truffleruby-native-libgraal/bin
        executable: truffleruby
        args: "--jvm %(variable)s --vm.Dpolyglot.engine.TraceSplittingSummary=true --vm.Dpolyglot.log.file='tmplog'"

    TruffleRuby-ce-interp:
        path: /tmp/truffleruby/truffleruby-native-libgraal/bin
        executable: truffleruby
        args: "--jvm %(variable)s --experimental-options --engine.Compilation=false --vm.Dpolyglot.engine.TraceSplittingSummary=true --vm.Dpolyglot.log.file='tmplog'"

    No-Splitting-TruffleRuby-ce:
        path: /tmp/truffleruby/truffleruby-jvm-ce/bin
        executable: truffleruby
        args: "--vm.Dpolyglot.engine.TraceSplittingSummary=true --vm.Dpolyglot.engine.Splitting=false --vm.Dpolyglot.log.file='tmplog'"

    No-Splitting-TruffleRuby-ce-native:
        path: /tmp/truffleruby/truffleruby-native-libgraal/bin
        executable: truffleruby
        args: "--jvm %(variable)s --vm.Dpolyglot.engine.TraceSplittingSummary=true --vm.Dpolyglot.engine.Splitting=false --vm.Dpolyglot.log.file='tmplog'"

    No-Splitting-TruffleRuby-ce-interp:
        path: /tmp/truffleruby/truffleruby-native-libgraal/bin
        executable: truffleruby
        args: "--jvm %(variable)s --experimental-options --engine.Compilation=false --vm.Dpolyglot.engine.TraceSplittingSummary=true --vm.Dpolyglot.engine.Splitting=false --vm.Dpolyglot.log.file='tmplog'"

    TruffleRuby-ce-disable-block-splitting:
        path: /tmp/truffleruby/truffleruby-jvm-ce/bin
        executable: truffleruby
        args: --vm.Dpolyglot.engine.Splitting=true --yield-always-clone=false   
    
    TruffleRuby-ce-only-truffle-heuristics:
        path: /tmp/truffleruby/truffleruby-jvm-ce/bin
        executable: truffleruby
        args: --vm.Dpolyglot.engine.Splitting=true --core-always-clone=false --never-split-honor=true

    TruffleRuby-ce-disable-honor:
        path: /tmp/truffleruby/truffleruby-jvm-ce/bin
        executable: truffleruby
        args: --vm.Dpolyglot.engine.Splitting=true --always-split-honor=false --never-split-honor=false

    TruffleRuby-enable-core-splitting:
        path: /tmp/truffleruby/truffleruby-jvm-ce/bin
        executable: truffleruby
        args: --vm.Dpolyglot.engine.Splitting=true --core-always-clone=true

    # TruffleRuby-ce-all-splitting:
    #     path: /tmp/truffleruby/truffleruby-jvm-ce/bin
    #     executable: truffleruby
    #     args: --vm.Dpolyglot.engine.Splitting=true --core-always-clone=true --always-split-honor=true --never-split-honor=true --yield-always-clone=true

experiments:    
    # impact-of-splitting:
    #     description: Measure impact of splitting on kernel methods on a blog application
    #     suites:
    #         #- rails-app
    #         - yjit-benchs-startup
    #         - ruby-benchs-startup
    #         - game-benchs-startup
    #     executions:
    #         - TruffleRuby-ce
    #         - TruffleRuby-ce-native
    benchmarks:
        description: All benchmarks
        executions:
            - TruffleRuby-ce-interp:
                suites:
                    - yjit-benchs-interp
                    - ruby-benchs-interp
                    - game-benchs-interp
            - TruffleRuby-ce:
                suites:
                    - yjit-benchs-steady
                    - ruby-benchs-steady
                    - game-benchs-steady
            - TruffleRuby-ce-native:
                suites:
                    - yjit-benchs-steady
                    - ruby-benchs-steady
                    - game-benchs-steady
