# -*- mode: yaml -*-
# Config file for ReBench
default_experiment: all
default_data_file: 'splitting-benchmark.data'

reporting:
    # Benchmark results will be reported to ReBenchDB
    rebenchdb:
        # this url needs to point to the API endpoint
        db_url: http://www.topistuff.ovh/rebenchdb
        repo_url: https://github.com/sophie-kaleba/truffleruby
        record_all: true # make sure everything is recorded
        project_name: TruffleRuby


# definition of benchmark suites
benchmark_suites:  
    rails-app:
        gauge_adapter: RebenchLog
        location: .
        command: &HARNESS_CMD "./phd-bench/phase/harness.rb %(benchmark)s %(iterations)s "
        iterations: 10
        benchmarks: 
            - BlogRailsRoutes: {extra_args:   1, machines: [yuria ]}
            # - BlogRailsRoutesOneRouteOneRequest: {extra_args:   1, machines: [yuria2 ]}
            # - BlogRailsRoutesTwoRoutes: {extra_args:   1, machines: [yuria3 ]}
            - BlogRailsRoutesTwoRoutesTwoRequests: {extra_args:   1, machines: [yuria2 ]}
            - ERubiRails: {extra_args:   1, iterations: 10, machines: [yuria3 ]}

    # TODO
    # shop-app:
    #     gauge_adapter: RebenchLog
    #     location: .
    #     command: *HARNESS_CMD

    # booking-app:
    #     gauge_adapter: RebenchLog
    #     location: .
    #     command: *HARNESS_CMD

    yjit-benchs:
        gauge_adapter: RebenchLog
        location: .
        command: *HARNESS_CMD
        max_invocation_time: 6000
        min_iteration_time: 1
        benchmarks: 
            - BinaryTrees: {extra_args:   1, iterations: 1, machines: [yuria ]}
            - FannkuchRedux: {extra_args:   1, iterations: 1, machines: [yuria2 ]}
            - HexaPdfSmall: {extra_args:   1, iterations: 1, machines: [yuria3 ]}
            # - ActiveRecordBench: {extra_args:   1, iterations: 1, machines: [yuria ]}
            - MailBench: {extra_args: 1, machines: [yuria1 ]} 
            - PsychLoad: {extra_args: 1, machines: [yuria2 ]} 
            - RubykonBench: {extra_args: 1, machines: [yuria3 ]} 
            #- JekyllBench: {extra_args: 1, machines: [yuria ]} 

    ruby-benchs:
        gauge_adapter: RebenchLog
        location: .
        command: *HARNESS_CMD
        iterations: 1
        benchmarks: 
            - Acid: {extra_args: 10, machines: [yuria ]}       
            - AsciidoctorConvertSmall: {extra_args: 1, machines: [yuria2 ]}  
            - AsciidoctorLoadFileSmall: {extra_args: 1, machines: [yuria3 ]}
            - BinaryTrees: {extra_args: 1, machines: [yuria1 ]} 
            - ImageDemoConv: {extra_args: 1, machines: [yuria2 ]}  
            - ImageDemoSobel: {extra_args: 1, machines: [yuria3 ]}  
            - LiquidCartParse: {extra_args: 5, machines: [yuria ]}          
            - LiquidCartRender: {extra_args: 10, machines: [yuria2 ]}         
            - LiquidMiddleware: {extra_args: 100, machines: [yuria3 ]} 
            - MatrixMultiply: {extra_args: 10, machines: [yuria ]}       
            - OptCarrot: {extra_args: 5, machines: [yuria2 ]}
            - Pidigits: {extra_args: 5, machines: [yuria3 ]}
            - RedBlack: {extra_args: 5, machines: [yuria ]}
            - SinatraHello: {extra_args: 5, machines: [yuria2 ]}


    game-benchs:
        gauge_adapter: RebenchLog
        location: .
        command: *HARNESS_CMD
        iterations: 1
        benchmarks: 
#            - Havlak: {extra_args: 100, machines: [yuria], variable_values: ["--vm.Xss6m"]}
            - Bounce: {extra_args: 10, machines: [yuria ]}
            - CD: {extra_args: 100, machines: [yuria2 ]}
            - DeltaBlue: {extra_args: 20, machines: [yuria3 ]}
            - Json: {extra_args: 30, machines: [yuria ]}
            - LeeBench: {extra_args: 100, machines: [yuria2 ]}
            - List: {extra_args: 500, machines: [yuria3 ]}
            - Mandelbrot: {extra_args: 500, machines: [yuria ]}
            - NBody: {extra_args: 250000, machines: [yuria2 ]}
            - NeuralNet: {extra_args: 500, machines: [yuria3 ]}
            - Permute: {extra_args: 500, machines: [yuria ]}
            - Queens: {extra_args: 300, machines: [yuria2 ]}
            - Richards: {extra_args: 15, machines: [yuria3 ]}
            - Sieve: {extra_args: 100, machines: [yuria ]}
            - SpectralNorm: {extra_args: 1000, machines: [yuria2 ]}
            - Storage: {extra_args: 300, machines: [yuria3 ]}
            - Towers: {extra_args: 200, machines: [yuria ]}


    micro-polymorphism:
        gauge_adapter: RebenchLog
        location: .
        command: *HARNESS_CMD
        iterations: 1
        benchmarks: 
            - Smethodbase: {extra_args: 2000, machines: [yuria3 ]}
            - Smethodpoly: {extra_args: 2000, machines: [yuria3 ]}
            - Smethodmega: {extra_args: 2000, machines: [yuria3 ]}
            - Sprocbase: {extra_args: 2000, machines: [yuria ]}
            - Sprocpoly: {extra_args: 2000, machines: [yuria ]}
            - Sprocmega: {extra_args: 2000, machines: [yuria ]}
            - Slambdabase: {extra_args: 2000, machines: [yuria2 ]}
            - Slambdapoly: {extra_args: 2000, machines: [yuria2 ]}
            - Slambdamega: {extra_args: 2000, machines: [yuria2 ]}

    micro-bottleneck: 
        gauge_adapter: RebenchLog
        location: .
        command: *HARNESS_CMD
        iterations: 2
        benchmarks: 
            - Slambdapolluted:  {extra_args: 1200, machines: [yuria3 ]}
            - Slambdabase:  {extra_args: 1200, machines: [yuria3 ]}
            - Sproxypolluted:  {extra_args: 1200, machines: [yuria ]}
            - Sproxybase:  {extra_args: 1200, machines: [yuria ]}

# VMs have a name and are specified by a path and the binary to be executed
executors:
    # TruffleRuby-interp:
    #     path: ./bin
    #     executable: jt
    #     args: ruby

    TruffleRuby-ce:
        path: /tmp/truffleruby/truffleruby-jvm-ce/bin
        executable: truffleruby
    
    TruffleRuby-ce-no-splitting:
        path: /tmp/truffleruby/truffleruby-jvm-ce/bin
        executable: truffleruby
        args: --vm.Dpolyglot.engine.Splitting=false 

    TruffleRuby-ce-disable-block-splitting:
        path: /tmp/truffleruby/truffleruby-jvm-ce/bin
        executable: truffleruby
        args: --vm.Dpolyglot.engine.Splitting=true --yield-always-clone=false   
    
    TruffleRuby-ce-only-truffle-heuristics:
        path: /tmp/truffleruby/truffleruby-jvm-ce/bin
        executable: truffleruby
        args: --vm.Dpolyglot.engine.Splitting=true --core-always-clone=false --never-split-honor=true

    TruffleRuby-ce-disable-honor:
        path: /tmp/truffleruby/truffleruby-jvm-ce/bin
        executable: truffleruby
        args: --vm.Dpolyglot.engine.Splitting=true --always-split-honor=false --never-split-honor=false

    TruffleRuby-enable-core-splitting:
        path: /tmp/truffleruby/truffleruby-jvm-ce/bin
        executable: truffleruby
        args: --vm.Dpolyglot.engine.Splitting=true --core-always-clone=true

    # TruffleRuby-ce-all-splitting:
    #     path: /tmp/truffleruby/truffleruby-jvm-ce/bin
    #     executable: truffleruby
    #     args: --vm.Dpolyglot.engine.Splitting=true --core-always-clone=true --always-split-honor=true --never-split-honor=true --yield-always-clone=true

experiments:    
    impact-of-splitting:
        description: Measure impact of splitting on kernel methods on a blog application
        suites:
            #- rails-app
            - yjit-benchs
            - ruby-benchs
            - game-benchs
            #- micro-polymorphism
        executions:
            - TruffleRuby-ce # everything
            # - TruffleRuby-ce-no-splitting #no splitting at all
            # - TruffleRuby-ce-only-truffle-heuristics # only truffle heuristics
            # - TruffleRuby-ce-disable-block-splitting
            # - TruffleRuby-ce-disable-honor
            # - TruffleRuby-enable-core-splitting
            # - TruffleRuby-ce-all-splitting