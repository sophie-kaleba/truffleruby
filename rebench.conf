# -*- mode: yaml -*-
# Config file for ReBench
default_experiment: all
default_data_file: 'behaviour-benchmark.data'

reporting:
    # Benchmark results will be reported to ReBenchDB
    rebenchdb:
        # this url needs to point to the API endpoint
        db_url: http://www.topistuff.ovh/rebenchdb
        repo_url: https://github.com/sophie-kaleba/truffleruby
        record_all: true # make sure everything is recorded
        project_name: TruffleRuby


# definition of benchmark suites
benchmark_suites:  
    blog-app:
        gauge_adapter: RebenchLog
        location: .
        command: &HARNESS_CMD "./bench/phase/harness.rb %(benchmark)s %(iterations)s "
        iterations: 1
        benchmarks: 
            - BlogRailsRoutes:
                extra_args: 1

    # TODO
    # shop-app:
    #     gauge_adapter: RebenchLog
    #     location: .
    #     command: *HARNESS_CMD

    # booking-app:
    #     gauge_adapter: RebenchLog
    #     location: .
    #     command: *HARNESS_CMD

    yjit-benchs:
        gauge_adapter: RebenchLog
        location: .
        command: *HARNESS_CMD
        iterations: 1
        benchmarks: 
            - ERubiRails:
                extra_args: 1
            - ActiveRecordBench
                extra_args: 1

    ruby-benchs:
        gauge_adapter: RebenchLog
        location: .
        command: *HARNESS_CMD
        iterations: 2
        benchmarks: 
            - OptCarrot:
                extra_args: 5
            - LiquidCartParse:          
                extra_args:  100
            - LiquidCartRender:         
                extra_args:  300
            - LiquidMiddleware:         
                extra_args:  200
            - AsciidoctorConvertSmall:  
                extra_args:    1
            - AsciidoctorLoadFileSmall: 
                extra_args:    1


    game-benchs:
        gauge_adapter: RebenchLog
        location: .
        command: *HARNESS_CMD
        iterations: 2000
        benchmarks: 
            - DeltaBlue:
                extra_args: 12000
            - Richards:
                extra_args: 100
            - Json:
                extra_args: 100
            - CD:
                extra_args: 250
            - Havlak:
                extra_args: 1500
                variable_values: ["--vm.Xss5m"]
            - Bounce:
                extra_args: 1500
            - List:
                extra_args: 1500
            - Mandelbrot:
                extra_args: 500
            - NBody:
                extra_args: 250000
            - Permute:
                extra_args: 1000
            - Queens:
                extra_args: 1000
            - Sieve:
                extra_args: 3000
            - Storage:
                extra_args: 1000
            - Towers:
                extra_args: 600

    micro-bottleneck: 
        gauge_adapter: RebenchLog
        location: .
        command: *HARNESS_CMD
        iterations: 2000
        benchmarks: 
            - Slambdapolluted:
                extra_args: 1200
            - Slambdabase:
                extra_args: 1200
            - Sproxypolluted:
                extra_args: 1200
            - Sproxybase:
                extra_args: 1200

# VMs have a name and are specified by a path and the binary to be executed
executors:
    TruffleRuby-interp:
        path: ./bin
        executable: jt
        args: ruby

    TruffleRuby-ce:
        path: ./bin
        executable: jt
        args: --use jvm-ce ruby 
    
    TruffleRuby-ce-no-splitting:
        path: ./bin
        executable: jt
        args: --use jvm-ce ruby --vm.Dpolyglot.engine.Splitting=false
    
    TruffleRuby-ce-only-heuristics:
        path: ./bin
        executable: jt
        args: --use jvm-ce ruby --vm.Dpolyglot.engine.Splitting=true --core-always-clone=false --never-split-honor=true

    TruffleRuby-ce-essential-heuristics:
        path: ./bin
        executable: jt
        args: --use jvm-ce ruby --vm.Dpolyglot.engine.Splitting=true --core-always-clone=false --always-split-honor=true

    TruffleRuby-ce-core-heuristics:
        path: ./bin
        executable: jt
        args: --use jvm-ce ruby --vm.Dpolyglot.engine.Splitting=true --core-always-clone=true --never-split-honor=true

    TruffleRuby-ce-all-splitting:
        path: ./bin
        executable: jt
        args: --use jvm-ce ruby --vm.Dpolyglot.engine.Splitting=true --core-always-clone=true --always-split-honor=true

experiments:    
    impact-of-splitting:
        description: Measure impact of splitting on kernel methods on a blog application
        suites:
            # - blog-app
            - ruby-benchs
            # - game-benchs
        executions:
            - TruffleRuby-ce
            # - TruffleRuby-ce-no-splitting
            # - TruffleRuby-ce-only-heuristics
            # - TruffleRuby-ce-essential-heuristics
            # - TruffleRuby-ce-core-heuristics
            # - TruffleRuby-ce-all-splitting

