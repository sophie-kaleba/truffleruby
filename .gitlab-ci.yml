stages:
  - build-and-test
  - benchmark
  - benchmark-completion

variables:
  JT: bin/jt
  GIT_SUBMODULE_STRATEGY: normal
  WORKING_BRANCH: master-with-benchs

.scripts:
    prep-path: &PREP_PATH |
      export PROJECT_FOLDER=$(pwd)
      export PATH=${PROJECT_FOLDER}/bin:${PATH}

    install-remote-graal-branch: &INSTALL_REMOTE_BRANCH |
      cd ../graal
      git config remote.skgraal.url >&- || git remote add skgraal https://github.com/sophie-kaleba/truffle.git
      cd ../benchmark-runs-tr

    ensure-git-dependencies: &GIT_DEPS |
      git -C ../graal fetch --all || true
      git -C ../mx pull || true

    ensure-truffle-ruby: &GIT_TR |
      git clone https://github.com/sophie-kaleba/truffleruby.git truffleruby.aux || true

    package-truffleruby: &PACKAGE_TR |
      export RESULT_HOME=$(dirname $(jt --use ${VARIANT} graalvm-home))
      cd ${RESULT_HOME}
      mv $(basename $(jt --use ${VARIANT} graalvm-home)) truffleruby-${VARIANT}
      rm -Rf truffleruby-${VARIANT}/legal truffleruby-${VARIANT}/lib/visualvm truffleruby-${VARIANT}/lib/jfr truffleruby-${VARIANT}/tools truffleruby-${VARIANT}/include truffleruby-${VARIANT}/lib/llvm
      tar -I lz4 -cf ${PROJECT_FOLDER}/truffleruby-${VARIANT}.tar.lz4 truffleruby-${VARIANT}

    upload-truffleruby: &UPLOAD_TR |
      sftp tmp-artifacts << EOF
        -mkdir incoming/${CI_PIPELINE_ID}/
        put ${PROJECT_FOLDER}/truffleruby-${VARIANT}.tar.lz4 incoming/${CI_PIPELINE_ID}/
      EOF

    download-variants: &DOWNLOAD_TR |
      sftp tmp-artifacts:incoming/${CI_PIPELINE_ID}/truffleruby-jvm-ce.tar.lz4

    install-on-tmpfs: &INSTALL_ON_TMP |
      export PROJECT_FOLDER=$(pwd)
      rm -Rf /tmp/truffleruby
      mkdir -p /tmp/truffleruby
      cd /tmp/truffleruby
      tar -I lz4 -xf ${PROJECT_FOLDER}/truffleruby-jvm-ce.tar.lz4

    install-gem-deps: &INSTALL_GEMS |
      /tmp/truffleruby/truffleruby-jvm-ce/bin/truffleruby -S gem install timeout
      /tmp/truffleruby/truffleruby-jvm-ce/bin/truffleruby -S gem install strscan

    pull-submodule-updates: &UPDATE_SUBMODULE |
      export PROJECT_FOLDER=$(pwd)
      git submodule update --init
      cd ${PROJECT_FOLDER}/phd-bench
      git fetch --all || true
      git pull origin master
      cd ${PROJECT_FOLDER}


build_and_test_job:
  stage: build-and-test
  tags: [yuria]
  script:
    - *INSTALL_REMOTE_BRANCH
    - *GIT_DEPS
    - *PREP_PATH
    
    - export VARIANT=jvm-ce
    - ${JT} build --sforceimports --env ${VARIANT}
#    - ${JT} --use ${VARIANT} test fast
    # - ${JT} --use ${VARIANT} test unittest
  
    - *PACKAGE_TR
    - *UPLOAD_TR

benchmark1:
  stage: benchmark
  needs: ["build_and_test_job"]
  tags: [yuria]
  allow_failure: true
  script:
    - *DOWNLOAD_TR
    - *GIT_TR
    - *INSTALL_ON_TMP

    - cd ${PROJECT_FOLDER}/truffleruby.aux
    - git fetch --all || true
    - git checkout ${WORKING_BRANCH}
    - *UPDATE_SUBMODULE


    - *INSTALL_GEMS
    - rebench -c --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" -c rebench.conf all m:yuria
    - rm -Rf /tmp/truffleruby

benchmark2:
  stage: benchmark
  needs: ["build_and_test_job"]
  tags: [yuria2]
  allow_failure: true
  script:
    - *DOWNLOAD_TR
    - *GIT_TR
    - *INSTALL_ON_TMP

    - cd ${PROJECT_FOLDER}/truffleruby.aux
    - git fetch --all || true
    - git checkout ${WORKING_BRANCH}
    - *UPDATE_SUBMODULE

    - *INSTALL_GEMS
    - rebench -c --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" -c rebench.conf all m:yuria2
    - rm -Rf /tmp/truffleruby

benchmark3:
  stage: benchmark
  needs: ["build_and_test_job"]
  tags: [yuria3]
  allow_failure: true
  script:
    - *DOWNLOAD_TR
    - *GIT_TR
    - *INSTALL_ON_TMP

    - cd ${PROJECT_FOLDER}/truffleruby.aux
    - git fetch --all || true
    - git checkout ${WORKING_BRANCH}
    - *UPDATE_SUBMODULE

    - *INSTALL_GEMS
    - rebench -c --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" -c rebench.conf all m:yuria3
    - rm -Rf /tmp/truffleruby
