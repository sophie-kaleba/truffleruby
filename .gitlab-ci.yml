stages:
  - build-and-test
  - benchmark
  - benchmark-completion

variables:
  JT: bin/jt
  GIT_SUBMODULE_STRATEGY: normal

before_script:
  - git submodule update --init

.scripts:
   package-truffleruby: &PACKAGE_TR |
     tar -I lz4 -cf ${PROJECT_FOLDER}/truffleruby-${VARIANT}.tar.lz4 truffleruby-${VARIANT}

   upload-truffleruby: &UPLOAD_TR |
     sftp tmp-artifacts << EOF
       -mkdir incoming/${CI_PIPELINE_ID}/
       put ${PROJECT_FOLDER}/truffleruby-${VARIANT}.tar.lz4 incoming/${CI_PIPELINE_ID}/
     EOF
    
   download-variants: &DOWNLOAD_TR |
     sftp tmp-artifacts:incoming/${CI_PIPELINE_ID}/truffleruby-jvm-ce.tar.lz4
  
   install-on-tmpfs: &INSTALL_ON_TMP |
     export PROJECT_FOLDER=$(pwd)
     rm -Rf /tmp/truffleruby
     mkdir -p /tmp/truffleruby
     cd /tmp/truffleruby
     tar -I lz4 -xf ${PROJECT_FOLDER}/truffleruby-jvm-ce.tar.lz4

build_and_test_job:
  stage: build-and-test
  tags: [yuria]
  script:
    - export VARIANT=jvm-ce
    - ${JT} build --sforceimports --env ${VARIANT}
    - ${JT} --use ${VARIANT} test fast
    # - ${JT} --use ${VARIANT} test unittest
  
    - *PACKAGE_TR
    - *UPLOAD_TR

benchmark1:
  stage: benchmark
  needs: ["build_and_test_job"]
  tags: [yuria]
  allow_failure: true
  script:
    - *DOWNLOAD_TR
    - *INSTALL_ON_TMP

    - rebench -c --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" -c rebench.conf all m:yuria
    - rm -Rf /tmp/truffleruby

benchmark2:
  stage: benchmark
  needs: ["build_and_test_job"]
  tags: [yuria2]
  allow_failure: true
  script:
    - *DOWNLOAD_TR
    - *INSTALL_ON_TMP

    - rebench -c --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" -c rebench.conf all m:yuria2
    - rm -Rf /tmp/truffleruby

benchmark3:
  stage: benchmark
  needs: ["build_and_test_job"]
  tags: [yuria3]
  allow_failure: true
  script:
    - *DOWNLOAD_TR
    - *INSTALL_ON_TMP

    - rebench -c --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" -c rebench.conf all m:yuria3
    - rm -Rf /tmp/truffleruby

report-completion:
  stage: benchmark-completion
  needs: ["build_and_test_job"]
  tags: [yuria]
  script:
    - rebench --experiment="CI ID $CI_PIPELINE_ID" --report-completion rebench.conf